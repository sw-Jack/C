* 상수
  - 데이터를 변경할 수 없는 공간
  - 리터럴 상수, 심볼릭 상수 

* 리터럴 상수 -> 단발성 데이터
  - 데이터 그 자체
  - 메모리(RAM)에 자동으로 일정한 형식의 공간이 만들어지고 자동으로 저장된다.
  - 공간을 구분할 수 있는 방법이 없다
  - 공간을 다시 이용할 수 없다

* 데이터를 저장하고 관리하는 공간들(변수, 배열, 포인터...)
  - 데이터를 저장하는 공간
  - 일정한 형식의 공간을 만들어서 우리가 직접 저장해야 한다
  - 공간을 대표하는 이름이 존재한다
  - 이름을 통해 그 공간을 다시 이용할 수 있다
  - 지속적으로 데이터를 이용해야 할 때 사용한다

* 변수
  - 데이터 하나를 저장하는 공간
  - 일정한 형식의 공간을 만들어서 우리가 직접 저장해야 한다
  - 공간을 대표하는 이름이 존재한다
  - 이름을 통해 그 공간을 다시 이용할 수 있다
  - 지속적으로 데이터를 이용해야 할 때 사용한다

* 선언
  - 메모리에 공간을 할당 받고 그 공간에 이름을 붙이는 작업
  - 형식 
    자료형 [변수명];
  - 자료형 
    -> 데이터의 형태(정수, 실수, 문자)를 구분하고 데이터의 범위나 부호의 사용 여부 등을 결정하는 키워드
    -> 공간의 형식을 정의한 키워드
    -> 공간을 찍어내기 위한 틀
    -> 종류 
        -> 정수 : %d
            -> short : 2byte (-2^15 ~ 2^15-1)
            -> int : 4byte (-2^31 ~ 2^31-1)
            -> long : 4byte (-2^31 ~ 2^31-1)
        -> 실수 : %f                      유효자리수
            -> float : 4byte              소수점 포함 7자리
            -> double : 8byte             소수점 포함 15자리
        -> 문자 :%c
            -> char : 1byte (-2^7 ~ 2^7-1)
  - 1bit  
    -> 0 or 1 둘 중에 하나를 저장할 수 있는 컴퓨터의 최소 데이터 단위
    -> 1 bit * 8 = 1byte / 1byte * 1024 = 1kbyte / 1kb * 1024 = 1MB / 1MB * 1024 = 1GB / 1GB * 1024 = 1TB

* 초기화
  - 할당받은 공간에 값을 처음 넣는 작업
  - 할당받은 공간에는 항상 쓰레기 값이 있기 때문에 우리가 아는 값으로 초기화를 진행해야 한다

* 호출
  - 할당받은 공간을 불러오는 작업
